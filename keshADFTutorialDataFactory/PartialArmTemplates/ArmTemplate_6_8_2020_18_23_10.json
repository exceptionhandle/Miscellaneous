{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "keshADFTutorialDataFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dataflow3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Parquet1",
								"type": "DatasetReference"
							},
							"name": "StagePatents"
						},
						{
							"dataset": {
								"referenceName": "Parquet2",
								"type": "DatasetReference"
							},
							"name": "DefaultDimPatent"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText10",
								"type": "DatasetReference"
							},
							"name": "DimPatentCurated"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "DimPatent"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "MapPatents"
						},
						{
							"name": "PatentSurrogateKey"
						},
						{
							"name": "AggregatePatents"
						},
						{
							"name": "UnionDefaultDimPatent"
						},
						{
							"name": "SelectDistinctPatents"
						}
					],
					"script": "source(output(\n\t\tPATENT_ID as string,\n\t\tPATENT_TITLE as string,\n\t\tPROJECT_ID as string,\n\t\tPATENT_ORG_NAME as string,\n\t\tLOAD_FILE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tformat: 'parquet') ~> StagePatents\nsource(output(\n\t\tPATENT_ID as string,\n\t\tPATENT_TITLE as string,\n\t\tPROJECT_ID as string,\n\t\tPATENT_ORG_NAME as string,\n\t\tLOAD_FILE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> DefaultDimPatent\nStagePatents derive(PATENT_ID = rtrim(substring(byName('PATENT_ID'), 1, 30)),\n\t\tPATENT_TITLE = rtrim(substring(byName('PATENT_TITLE'), 1, 500)),\n\t\tPROJECT_ID = rtrim(substring(byName('PROJECT_ID'), 1, 30)),\n\t\tCREATED_DATE = currentTimestamp()) ~> MapPatents\nSelectDistinctPatents select(mapColumn(\n\t\tPATENT_ID,\n\t\tPATENT_TITLE,\n\t\tCREATED_DATE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PatentSurrogateKey\nMapPatents aggregate(groupBy(PATENT_ID),\n\teach(match(name!='PATENT_ID'), $$ = first($$))) ~> AggregatePatents\nPatentSurrogateKey, DefaultDimPatent union(byName: true)~> UnionDefaultDimPatent\nAggregatePatents select(mapColumn(\n\t\tPATENT_ID,\n\t\tPATENT_TITLE,\n\t\tCREATED_DATE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDistinctPatents\nUnionDefaultDimPatent sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tfilePattern:'DimPatent',\n\ttruncate: true,\n\tpartitionBy('roundRobin', 2),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DimPatentCurated\nUnionDefaultDimPatent sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\ttruncate: true,\n\tpartitionBy('roundRobin', 2),\n\tskipDuplicateMapOutputs: true) ~> DimPatent\nPatentSurrogateKey sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nSelectDistinctPatents sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2"
				}
			},
			"dependsOn": []
		}
	]
}