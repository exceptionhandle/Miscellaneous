{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText3",
						"type": "DatasetReference"
					},
					"name": "IFPOONOutreachData"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText4",
						"type": "DatasetReference"
					},
					"name": "IFPOONTemplateInfo"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText8",
						"type": "DatasetReference"
					},
					"name": "IFPOONOutreachDataAppendExtract"
				}
			],
			"transformations": [
				{
					"name": "NameInfo"
				},
				{
					"name": "qccheck"
				}
			],
			"script": "source(output(\n\t\tDate as string,\n\t\t{       Referred} as string,\n\t\t{   Geographic Market} as string,\n\t\t{ Market Segment} as string,\n\t\t{ Line of Business} as string,\n\t\t{   Member ID} as string,\n\t\t{ Member First Name} as string,\n\t\t{   Member Last Name} as string,\n\t\t{   DOB} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tmoveFiles: ['','IFP_OON_Outreach_Processed'],\n\tpartitionBy('hash', 1)) ~> IFPOONOutreachData\nsource(output(\n\t\tmember_id as string,\n\t\t{ address_1} as string,\n\t\t{      address_2} as string,\n\t\t{      city} as string,\n\t\t{        state} as string,\n\t\t{        zip} as string,\n\t\t{        date_of_birth} as string,\n\t\t{ first_name} as string,\n\t\t{       last_name } as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionBy('hash', 1)) ~> IFPOONTemplateInfo\nIFPOONOutreachData, IFPOONTemplateInfo join({   Member ID} == member_id,\n\tjoinType:'inner',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'both')~> NameInfo\nNameInfo derive(dob_check = case({        date_of_birth} == {   DOB}, 'DOB Matched', concat('DOB did not Match ', toString({        date_of_birth}, 'yyyy-MM-dd'))),\n\t\tfirst_name_check = case(upper({ first_name}) == upper({ Member First Name}), 'First Name Matched ', concat('First Name did not match ', { first_name})),\n\t\tlast_name_check = case(upper({       last_name }) == upper({   Member Last Name}), 'Last Name Matched ', concat('Last Name did not match ', {       last_name })),\n\tpartitionBy('hash', 1)) ~> qccheck\nqccheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['IFP_OON_Outreach_List_20200326_filled.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IFPOONOutreachDataAppendExtract"
		}
	}
}