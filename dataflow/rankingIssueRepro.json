{
	"name": "rankingIssueRepro",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "kesh",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				},
				{
					"linkedService": {
						"referenceName": "kesh",
						"type": "LinkedServiceReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumnProductArray"
				},
				{
					"name": "SelectConversionColumns"
				},
				{
					"name": "FlattenProduct"
				},
				{
					"name": "LeftJoinGAProductMapping"
				},
				{
					"name": "PivotLeadProcessSteptype"
				},
				{
					"name": "DerivedColumnSetKeys"
				},
				{
					"name": "SelectConversionColumns2"
				},
				{
					"name": "DerivedColumnGAProduct"
				},
				{
					"name": "WindowFirstHitNumberForProductOrGoal"
				},
				{
					"name": "WindowDailyVisitorCount"
				},
				{
					"name": "SelectGAConversionColumns"
				},
				{
					"name": "UnionRKSAndKMIConversions"
				},
				{
					"name": "RankDailyVisitorId"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {ProductInGA } as string,",
				"          {Product } as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'adhocextract',",
				"     folderPath: 'smallFile/rankingIssue',",
				"     fileName: 'ga_product_mapping.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionBy('hash', 1)) ~> source1",
				"source(output(",
				"          date as double,",
				"          sourcedomain as string,",
				"          visitStartTime as integer,",
				"          sessionId as string,",
				"          firstHitNumber as short,",
				"          klantummer as string,",
				"          linkedKlatnummer as string,",
				"          campaign as string,",
				"          promoId as string,",
				"          promoName as string,",
				"          linkedPromoId as string,",
				"          linkedPromoName as string,",
				"          channelGrouping as string,",
				"          product as string,",
				"          goal as string,",
				"          application_steptype as string,",
				"          leadProcessSteptype as string,",
				"          isConversino as boolean,",
				"          conversionsCount as short",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'adhocextract',",
				"     folderPath: 'smallFile/rankingIssue',",
				"     fileName: 'campaigns_conversions.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> source2",
				"source2 derive(distinctProductArray = distinct(split(product,',')),",
				"          headCustomerGroup = linkedKlatnummer,",
				"          linkedKlantnummer = linkedKlatnummer) ~> DerivedColumnProductArray",
				"DerivedColumnProductArray select(mapColumn(",
				"          date,",
				"          sourcedomain,",
				"          visitStartTime,",
				"          sessionId,",
				"          firstHitNumber,",
				"          klantnummer = klantummer,",
				"          linkedKlantnummer,",
				"          campaign,",
				"          promoId,",
				"          linkedPromoId,",
				"          promoName,",
				"          linkedPromoName,",
				"          channelGrouping,",
				"          goal,",
				"          application_steptype,",
				"          leadProcessSteptype,",
				"          isConversion = isConversino,",
				"          conversionsCount,",
				"          distinctProductArray,",
				"          headCustomerGroup,",
				"          GAProducts = product",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectConversionColumns",
				"SelectConversionColumns foldDown(unroll(distinctProductArray),",
				"     mapColumn(",
				"          date,",
				"          sourcedomain,",
				"          visitStartTime,",
				"          sessionId,",
				"          firstHitNumber,",
				"          klantnummer,",
				"          linkedKlantnummer,",
				"          campaign,",
				"          promoId,",
				"          linkedPromoId,",
				"          promoName,",
				"          linkedPromoName,",
				"          channelGrouping,",
				"          goal,",
				"          application_steptype,",
				"          leadProcessSteptype,",
				"          isConversion,",
				"          conversionsCount,",
				"          headCustomerGroup,",
				"          distinctProductArray,",
				"          GAProducts",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> FlattenProduct",
				"DerivedColumnGAProduct, source1 join(trim(lower(GAProduct)) == trim(lower({ProductInGA })),",
				"     joinType:'left',",
				"     broadcast: 'right')~> LeftJoinGAProductMapping",
				"WindowFirstHitNumberForProductOrGoal pivot(groupBy(sourcedomain,",
				"          date,",
				"          sessionId,",
				"          visitStartTime,",
				"          linkedKlantnummer,",
				"          headCustomerGroup,",
				"          channelGrouping,",
				"          campaign,",
				"          linkedPromoId,",
				"          linkedPromoName,",
				"          firstHitNumberForProductOrGoal,",
				"          GAProduct,",
				"          Product = {Product },",
				"          goal),",
				"     pivotBy(leadProcessSteptype, ['lead_started', 'lead_completed']),",
				"     {} = count(leadProcessSteptype),",
				"     columnNaming: '$N$V',",
				"     lateral: true) ~> PivotLeadProcessSteptype",
				"PivotLeadProcessSteptype derive(AssistingCampaignKey = upper(",
				"    case(",
				"        in(['mpd','pgm'],lower(left(campaign,3))),left(campaign,13),",
				"        campaign",
				"    )",
				"),",
				"          CampaignKey = upper(",
				"    case(",
				"        not(isNull(linkedPromoId)), concat('PGM',left(linkedPromoId,10)),",
				"        in(['mpd','pgm'],lower(left(campaign,3))), left(campaign,13),",
				"        campaign",
				"    )",
				"),",
				"          LeadChannelKey = upper(case(",
				"    not(isNull(linkedPromoId)), linkedPromoName,",
				"    channelGrouping",
				")),",
				"          LeadDateKey = toDate(toString(date),'yyyyMMdd'),",
				"          LeadProductKey = toString(Product),",
				"          SourceSystem = 'GOOGLE',",
				"          SourceDomain = sourcedomain,",
				"          SourceProduct = GAProduct,",
				"          SourceSessionId = sessionId,",
				"          SourceVisitStartTime = visitStartTime,",
				"          SourceLinkedCustomerNumber = linkedKlantnummer,",
				"          SourceHeadCustomerGroup = headCustomerGroup,",
				"          SourceSessionSortOrder = firstHitNumberForProductOrGoal,",
				"          SourceGoal = goal,",
				"          IsLeadStarted = case(",
				"    lead_started >= 1 || lead_completed >= 1, 1,",
				"    0",
				"),",
				"          IsLeadCompleted = case(",
				"    lead_completed >= 1, 1,",
				"    0",
				")) ~> DerivedColumnSetKeys",
				"WindowDailyVisitorCount select(mapColumn(",
				"          AssistingCampaignKey,",
				"          CampaignKey,",
				"          LeadChannelKey,",
				"          LeadDateKey,",
				"          LeadProductKey,",
				"          IsLeadStarted,",
				"          IsLeadCompleted,",
				"          DailyVisitorId,",
				"          DailyVisitorCount,",
				"          SourceSystem,",
				"          SourceDomain,",
				"          SourceSessionId,",
				"          SourceSessionSortOrder,",
				"          SourceVisitStartTime,",
				"          SourceLinkedCustomerNumber,",
				"          SourceHeadCustomerGroup,",
				"          SourceProduct,",
				"          SourceGoal",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectConversionColumns2",
				"FlattenProduct derive(GAProduct = toString(distinctProductArray)) ~> DerivedColumnGAProduct",
				"LeftJoinGAProductMapping window(over(sourcedomain,",
				"          date,",
				"          sessionId,",
				"          visitStartTime,",
				"          linkedKlantnummer,",
				"          headCustomerGroup,",
				"          channelGrouping,",
				"          campaign,",
				"          linkedPromoId,",
				"          linkedPromoName,",
				"          GAProduct,",
				"          Product = {Product },",
				"          goal),",
				"     firstHitNumberForProductOrGoal = min(firstHitNumber)) ~> WindowFirstHitNumberForProductOrGoal",
				"RankDailyVisitorId window(over(DailyVisitorId),",
				"     DailyVisitorCount = count()) ~> WindowDailyVisitorCount",
				"DerivedColumnSetKeys select(mapColumn(",
				"          AssistingCampaignKey,",
				"          CampaignKey,",
				"          LeadChannelKey,",
				"          LeadDateKey,",
				"          LeadProductKey,",
				"          IsLeadStarted,",
				"          IsLeadCompleted,",
				"          SourceSystem,",
				"          SourceDomain = DerivedColumnSetKeys@SourceDomain,",
				"          SourceLinkedCustomerNumber,",
				"          SourceHeadCustomerGroup,",
				"          SourceGoal,",
				"          SourceProduct,",
				"          SourceSessionId,",
				"          SourceSessionSortOrder,",
				"          SourceVisitStartTime",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectGAConversionColumns",
				"SelectGAConversionColumns union(byName: true)~> UnionRKSAndKMIConversions",
				"UnionRKSAndKMIConversions rank(asc(LeadDateKey, true),",
				"     asc(CampaignKey, true),",
				"     asc(SourceSessionId, true),",
				"     output(DailyVisitorId as long),",
				"     dense: true) ~> RankDailyVisitorId",
				"SelectConversionColumns2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1,",
				"     partitionBy('key',",
				"          0,",
				"          LeadDateKey",
				"     ),",
				"     compressionType: 'snappy',",
				"     compressionLevel: 'Fastest',",
				"     fileSystem: 'x239-marketing-performance',",
				"     folderPath: 'integration/conversions_step_1_rank',",
				"     mergeSchema: false,",
				"     autoCompact: true,",
				"     optimizedWrite: true,",
				"     vacuum: 0,",
				"     preCommands: [],",
				"     postCommands: []) ~> sink1"
			]
		}
	}
}